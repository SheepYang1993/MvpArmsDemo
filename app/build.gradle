apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'//使用apt插件

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "me.sheepyang.mvparmsdemo"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }
    buildTypes {

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"//开启Debug模式
            buildConfigField "boolean", "USE_CANARY", "true"//开启内存检测
            minifyEnabled false//关闭混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"//关闭Debug模式
            buildConfigField "boolean", "USE_CANARY", "false"//关闭内存检测
            minifyEnabled true//开启混淆
            shrinkResources true//删除无效的Resource
            zipAlignEnabled true//混淆后的zip优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {//lint检查
        disable 'InvalidPackage'//忽略检测无效包，也可以使用warning 'InvalidPackage'用警告代替报错
        disable "ResourceType"//忽略检测资源类型不匹配
        abortOnError false//报错不中断build
    }
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'//使用apt
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile rootProject.ext.dependencies["junit"]
    androidTestCompile(rootProject.ext.dependencies["espresso-core"], {
        exclude module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    apt rootProject.ext.dependencies["dagger2-apt-compiler"]//依赖apt插件
    provided rootProject.ext.dependencies["javax.annotation"]//dagger2必须依赖jsr250 annotation
    apt rootProject.ext.dependencies["butterknife-apt"]
    debugCompile rootProject.ext.dependencies["canary-debug"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    testCompile rootProject.ext.dependencies["canary-release"]
    compile project(':arms')
}
